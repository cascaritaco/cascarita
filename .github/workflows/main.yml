# Commenting out for now, will work on flows soon
# name: ðŸŽ¯ Main CI
# on:
#   pull_request:
#     branches:
#       - main
#   workflow_dispatch:
#   workflow_call:

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     env:
#       DB_NAME: test_suite_db
#       DB_USER: root
#       DB_PASSWORD: root

#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v2

#       - name: Copy .env.example to .env
#         run: cp .env.example .env

#       - name: Load .env file
#         run: |
#           set -o allexport
#           source <(grep -v '^#' .env | xargs -d '\n')
#           set +o allexport

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - name: Cache node modules
#         id: cache-npm
#         uses: actions/cache@v3

#         env:
#           cache-name: node-modules
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#       - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
#         name: List the state of node modules
#         continue-on-error: true
#         run: npm list

#       - name: Compile assets
#         run: |
#           npm install
#           npm run eslint
#           npm run build

#       - name: Start MySQL
#         run: |
#           sudo service mysql start
#           mysql -u"$DB_USER" -p"$DB_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"

#       - name: Jest Tests
#         run: npm run test

#       - name: Start the app
#         run: npm run start > app_output.log 2>&1 &
#         env:
#           PORT: 3001

#       - name: Wait for the app to start
#         run: sleep 10
#         timeout-minutes: 0.5
#       - name: Display logs
#         run: |
#           echo "Application logs: $(cat app_output.log)"

#       - name: Check if the app is up
#         run: curl -I http://127.0.0.1:3001
